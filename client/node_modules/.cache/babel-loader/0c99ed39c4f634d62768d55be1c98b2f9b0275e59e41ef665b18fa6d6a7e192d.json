{"ast":null,"code":"// import { Box, Button, IconButton, Typography } from \"@mui/material\";\n// import Tabs from \"@mui/material/Tabs\";\n// import Tab from \"@mui/material/Tab\";\n// import { useParams } from \"react-router-dom\";\n// import { useEffect, useState } from \"react\";\n// import Item from \"../../components/Item\";\n// import FavoriteBorderOutlinedIcon from \"@mui/icons-material/FavoriteBorderOutlined\";\n// import AddIcon from \"@mui/icons-material/Add\";\n// import RemoveIcon from \"@mui/icons-material/Remove\";\n// import { shades } from \"../../theme\";\n// import { addToCart } from \"../../state\";\n// import { useDispatch } from \"react-redux\";\n\n// const ItemDetails = () => {\n//   const dispatch = useDispatch();\n//   const { itemId } = useParams();\n//   const [value, setValue] = useState(\"description\");\n//   const [count, setCount] = useState(1);\n//   const [item, setItem] = useState(null);\n//   const [items, setItems] = useState([]);\n\n//   const handleChange = (event, newValue) => {\n//     setValue(newValue);\n//   };\n\n//   async function getItem() {\n//     const item = await fetch(\n//       `http://localhost:2000/api/items/${itemId}?populate=image`,\n//       {\n//         method: \"GET\",\n//       }\n//     );\n//     const itemJson = await item.json();\n//     setItem(itemJson.data);\n//   }\n\n//   async function getItems() {\n//     const items = await fetch(\n//       `http://localhost:3001/games`,\n//       {\n//         method: \"GET\",\n//       }\n//     );\n//     const itemsJson = await items.json();\n//     setItems(itemsJson.data);\n//   }\n\n//   useEffect(() => {\n//     // getItem();\n//     getItems();\n//   }, [itemId]); \n\n//   return (\n//     <Box width=\"80%\" m=\"80px auto\">\n//       <Box display=\"flex\" flexWrap=\"wrap\" columnGap=\"40px\">\n//         {/* IMAGES */}\n//         <Box flex=\"1 1 40%\" mb=\"40px\">\n//           <img\n//             alt={item?.name}\n//             width=\"100%\"\n//             height=\"100%\"\n//             src={''}\n//             style={{ objectFit: \"contain\" }}\n//           />\n//         </Box>\n\n//         {/* ACTIONS */}\n//         <Box flex=\"1 1 50%\" mb=\"40px\">\n//           <Box display=\"flex\" justifyContent=\"space-between\">\n//             <Box>Home/Item</Box>\n//             <Box>Prev Next</Box>\n//           </Box>\n\n//           <Box m=\"65px 0 25px 0\">\n//             <Typography variant=\"h3\">{item?.name}</Typography>\n//             <Typography>${item?.price}</Typography>\n//             <Typography sx={{ mt: \"20px\" }}>\n//               {item?.longDescription}\n//             </Typography>\n//           </Box>\n\n//           <Box display=\"flex\" alignItems=\"center\" minHeight=\"50px\">\n//             <Box\n//               display=\"flex\"\n//               alignItems=\"center\"\n//               border={`1.5px solid ${shades.neutral[300]}`}\n//               mr=\"20px\"\n//               p=\"2px 5px\"\n//             >\n//               <IconButton onClick={() => setCount(Math.max(count - 1, 0))}>\n//                 <RemoveIcon />\n//               </IconButton>\n//               <Typography sx={{ p: \"0 5px\" }}>{count}</Typography>\n//               <IconButton onClick={() => setCount(count + 1)}>\n//                 <AddIcon />\n//               </IconButton>\n//             </Box>\n//             <Button\n//               sx={{\n//                 backgroundColor: \"#222222\",\n//                 color: \"white\",\n//                 borderRadius: 0,\n//                 minWidth: \"150px\",\n//                 padding: \"10px 40px\",\n//               }}\n//               onClick={() => dispatch(addToCart({ item: { ...item, count } }))}\n//             >\n//               ADD TO CART\n//             </Button>\n//           </Box>\n//           <Box>\n//             <Box m=\"20px 0 5px 0\" display=\"flex\">\n//               <FavoriteBorderOutlinedIcon />\n//               <Typography sx={{ ml: \"5px\" }}>ADD TO WISHLIST</Typography>\n//             </Box>\n//             <Typography>CATEGORIES: {item?.category}</Typography>\n//           </Box>\n//         </Box>\n//       </Box>\n\n//       {/* INFORMATION */}\n//       <Box m=\"20px 0\">\n//         <Tabs value={value} onChange={handleChange}>\n//           <Tab label=\"DESCRIPTION\" value=\"description\" />\n//           <Tab label=\"REVIEWS\" value=\"reviews\" />\n//         </Tabs>\n//       </Box>\n//       <Box display=\"flex\" flexWrap=\"wrap\" gap=\"15px\">\n//         {value === \"description\" && (\n//           <div>{item?.longDescription}</div>\n//         )}\n//         {value === \"reviews\" && <div>reviews</div>}\n//       </Box>\n\n//       {/* RELATED ITEMS */}\n//       <Box mt=\"50px\" width=\"100%\">\n//         <Typography variant=\"h3\" fontWeight=\"bold\">\n//           Related Products\n//         </Typography>\n//         <Box\n//           mt=\"20px\"\n//           display=\"flex\"\n//           flexWrap=\"wrap\"\n//           columnGap=\"1.33%\"\n//           justifyContent=\"space-between\"\n//         >\n//           {/* {items.slice(0, 4).map((item, i) => (\n//             <Item key={`${item.name}-${i}`} item={item} />\n//           ))} */}\n//         </Box>\n//       </Box>\n//     </Box>\n//   );\n// };\n\n// export default ItemDetails;","map":{"version":3,"names":[],"sources":["/Users/anshuc./Documents/Devansh/D/client/src/scenes/itemDetails/ItemDetails.jsx"],"sourcesContent":["// import { Box, Button, IconButton, Typography } from \"@mui/material\";\n// import Tabs from \"@mui/material/Tabs\";\n// import Tab from \"@mui/material/Tab\";\n// import { useParams } from \"react-router-dom\";\n// import { useEffect, useState } from \"react\";\n// import Item from \"../../components/Item\";\n// import FavoriteBorderOutlinedIcon from \"@mui/icons-material/FavoriteBorderOutlined\";\n// import AddIcon from \"@mui/icons-material/Add\";\n// import RemoveIcon from \"@mui/icons-material/Remove\";\n// import { shades } from \"../../theme\";\n// import { addToCart } from \"../../state\";\n// import { useDispatch } from \"react-redux\";\n\n// const ItemDetails = () => {\n//   const dispatch = useDispatch();\n//   const { itemId } = useParams();\n//   const [value, setValue] = useState(\"description\");\n//   const [count, setCount] = useState(1);\n//   const [item, setItem] = useState(null);\n//   const [items, setItems] = useState([]);\n\n//   const handleChange = (event, newValue) => {\n//     setValue(newValue);\n//   };\n\n//   async function getItem() {\n//     const item = await fetch(\n//       `http://localhost:2000/api/items/${itemId}?populate=image`,\n//       {\n//         method: \"GET\",\n//       }\n//     );\n//     const itemJson = await item.json();\n//     setItem(itemJson.data);\n//   }\n\n//   async function getItems() {\n//     const items = await fetch(\n//       `http://localhost:3001/games`,\n//       {\n//         method: \"GET\",\n//       }\n//     );\n//     const itemsJson = await items.json();\n//     setItems(itemsJson.data);\n//   }\n\n//   useEffect(() => {\n//     // getItem();\n//     getItems();\n//   }, [itemId]); \n\n//   return (\n//     <Box width=\"80%\" m=\"80px auto\">\n//       <Box display=\"flex\" flexWrap=\"wrap\" columnGap=\"40px\">\n//         {/* IMAGES */}\n//         <Box flex=\"1 1 40%\" mb=\"40px\">\n//           <img\n//             alt={item?.name}\n//             width=\"100%\"\n//             height=\"100%\"\n//             src={''}\n//             style={{ objectFit: \"contain\" }}\n//           />\n//         </Box>\n\n//         {/* ACTIONS */}\n//         <Box flex=\"1 1 50%\" mb=\"40px\">\n//           <Box display=\"flex\" justifyContent=\"space-between\">\n//             <Box>Home/Item</Box>\n//             <Box>Prev Next</Box>\n//           </Box>\n\n//           <Box m=\"65px 0 25px 0\">\n//             <Typography variant=\"h3\">{item?.name}</Typography>\n//             <Typography>${item?.price}</Typography>\n//             <Typography sx={{ mt: \"20px\" }}>\n//               {item?.longDescription}\n//             </Typography>\n//           </Box>\n\n//           <Box display=\"flex\" alignItems=\"center\" minHeight=\"50px\">\n//             <Box\n//               display=\"flex\"\n//               alignItems=\"center\"\n//               border={`1.5px solid ${shades.neutral[300]}`}\n//               mr=\"20px\"\n//               p=\"2px 5px\"\n//             >\n//               <IconButton onClick={() => setCount(Math.max(count - 1, 0))}>\n//                 <RemoveIcon />\n//               </IconButton>\n//               <Typography sx={{ p: \"0 5px\" }}>{count}</Typography>\n//               <IconButton onClick={() => setCount(count + 1)}>\n//                 <AddIcon />\n//               </IconButton>\n//             </Box>\n//             <Button\n//               sx={{\n//                 backgroundColor: \"#222222\",\n//                 color: \"white\",\n//                 borderRadius: 0,\n//                 minWidth: \"150px\",\n//                 padding: \"10px 40px\",\n//               }}\n//               onClick={() => dispatch(addToCart({ item: { ...item, count } }))}\n//             >\n//               ADD TO CART\n//             </Button>\n//           </Box>\n//           <Box>\n//             <Box m=\"20px 0 5px 0\" display=\"flex\">\n//               <FavoriteBorderOutlinedIcon />\n//               <Typography sx={{ ml: \"5px\" }}>ADD TO WISHLIST</Typography>\n//             </Box>\n//             <Typography>CATEGORIES: {item?.category}</Typography>\n//           </Box>\n//         </Box>\n//       </Box>\n\n//       {/* INFORMATION */}\n//       <Box m=\"20px 0\">\n//         <Tabs value={value} onChange={handleChange}>\n//           <Tab label=\"DESCRIPTION\" value=\"description\" />\n//           <Tab label=\"REVIEWS\" value=\"reviews\" />\n//         </Tabs>\n//       </Box>\n//       <Box display=\"flex\" flexWrap=\"wrap\" gap=\"15px\">\n//         {value === \"description\" && (\n//           <div>{item?.longDescription}</div>\n//         )}\n//         {value === \"reviews\" && <div>reviews</div>}\n//       </Box>\n\n//       {/* RELATED ITEMS */}\n//       <Box mt=\"50px\" width=\"100%\">\n//         <Typography variant=\"h3\" fontWeight=\"bold\">\n//           Related Products\n//         </Typography>\n//         <Box\n//           mt=\"20px\"\n//           display=\"flex\"\n//           flexWrap=\"wrap\"\n//           columnGap=\"1.33%\"\n//           justifyContent=\"space-between\"\n//         >\n//           {/* {items.slice(0, 4).map((item, i) => (\n//             <Item key={`${item.name}-${i}`} item={item} />\n//           ))} */}\n//         </Box>\n//       </Box>\n//     </Box>\n//   );\n// };\n\n// export default ItemDetails;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}