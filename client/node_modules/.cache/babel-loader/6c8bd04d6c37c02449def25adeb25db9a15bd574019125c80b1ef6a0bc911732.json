{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  user: null,\n  token: null,\n  isCartOpen: false,\n  cart: [],\n  items: []\n};\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    setLogin: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    setLogout: state => {\n      state.user = null;\n      state.token = null;\n    },\n    setItems: (state, action) => {\n      state.items = action.payload;\n    },\n    addToCart: (state, action) => {\n      state.cart = [...state.cart, action.payload.item];\n    },\n    removeFromCart: (state, action) => {\n      state.cart = state.cart.filter(item => item._id !== action.payload.id);\n    },\n    increaseCount: (state, action) => {\n      state.cart = state.cart.map(item => {\n        if (item._id === action.payload.id) {\n          item.count++;\n        }\n        return item;\n      });\n    },\n    decreaseCount: (state, action) => {\n      state.cart = state.cart.map(item => {\n        if (item._id === action.payload.id && item.count > 1) {\n          item.count--;\n        }\n        return item;\n      });\n    },\n    setIsCartOpen: state => {\n      state.isCartOpen = !state.isCartOpen;\n    },\n    setLogin: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    setLogout: state => {\n      state.user = null;\n      state.token = null;\n    }\n  }\n});\nexport const {\n  setItems,\n  addToCart,\n  removeFromCart,\n  increaseCount,\n  decreaseCount,\n  setIsCartOpen,\n  setLogin,\n  setLogout\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","token","isCartOpen","cart","items","cartSlice","name","reducers","setLogin","state","action","payload","setLogout","setItems","addToCart","item","removeFromCart","filter","_id","id","increaseCount","map","count","decreaseCount","setIsCartOpen","actions","reducer"],"sources":["/Users/anshuc./Documents/Devansh/fypD-1/client/src/state/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  user: null,\n  token: null,\n  isCartOpen: false,\n  cart: [],\n  items: [],\n};\n\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    setLogin: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    setLogout: (state) => {\n      state.user = null;\n      state.token = null;\n    },\n    \n    setItems: (state, action) => {\n      state.items = action.payload;\n    },\n\n    addToCart: (state, action) => {\n      state.cart = [...state.cart, action.payload.item];\n    },\n\n    removeFromCart: (state, action) => {\n      state.cart = state.cart.filter((item) => item._id !== action.payload.id);\n    },\n\n    increaseCount: (state, action) => {\n      state.cart = state.cart.map((item) => {\n        if (item._id === action.payload.id) {\n          item.count++;\n        }\n        return item;\n      });\n    },\n\n    decreaseCount: (state, action) => {\n      state.cart = state.cart.map((item) => {\n        if (item._id === action.payload.id && item.count > 1) {\n          item.count--;\n        }\n        return item;\n      });\n    },\n\n    setIsCartOpen: (state) => {\n      state.isCartOpen = !state.isCartOpen;\n    },\n\n    setLogin: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    setLogout: (state) => {\n      state.user = null;\n      state.token = null;\n    },\n\n  },\n});\n\nexport const {\n  setItems,\n  addToCart,\n  removeFromCart,\n  increaseCount,\n  decreaseCount,\n  setIsCartOpen,\n  setLogin,\n  setLogout,\n\n} = cartSlice.actions;\n\nexport default cartSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}